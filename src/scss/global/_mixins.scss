/*********************************************************
  Mixins
*********************************************************/

@mixin section-padding() {
  padding-top: 3rem;
  padding-bottom: 3rem;
  @media (min-width: 768px) {
    padding-top: 5rem;
    padding-bottom: 5rem;
  }
  @media (min-width: 1200px) {
    padding-top: 7rem;
    padding-bottom: 7rem;
  }
}


// Aspect ratios
@mixin aspect-ratio ($width, $height) {
  width: 100%;
  padding-top: (100% * ($height / $width));
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  position: relative;
  iframe {
    position: absolute;
    top: 0; left: 0;
    width: 100%; height: 100%;
  }
}

// Add more as needed
.ar-16\:9 {
  // HD
  @include aspect-ratio (16,9);
}
.ar-21\:9 {
  // Cinema
  @include aspect-ratio (21,9);
}
.ar-32\:9 {
  // Ultra Widescreen
  @include aspect-ratio (32,9);
}
.ar-4\:3 {
  // Standard
  @include aspect-ratio (4,3);
}
.ar-2\:1 {
  @include aspect-ratio (2,1);
}

/**
  * PX to REM Conversion
  * USAGE: .class {font-size: rem(18)}
  */
$baseFontSize: 16; 
@function rem($pixels, $context: $baseFontSize) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }
  @if (unitless($context)) {
    $context: $context * 1px;
  }
  @return $pixels / $context * 1rem;
}

/**
  * Fluid Property
  * Make a property fluidly responsive by using calc and viewport units.
  * USAGE: @include fluid-property(height, 200, 400)
  */
@mixin fluid-property($property, $min:20, $max:30, $start: 480px, $end: 1200px, $clip: true, $clipAtStart: true, $clipAtEnd: true) {
  $start: $start / ($start * 0 + 1);
  $end: $end / ($end * 0 + 1);
  $multiplier: ($max - $min) / ($end - $start) * 100;
  $adder: ($min * $end - $max * $start) / ($end - $start);
  $formula: calc(#{$multiplier + 0vw} + #{$adder + 0px});
  $median: ($max+$min)/2;
  $fallback: #{$median + 0px};
  @if $clip and $clipAtStart {
    @media (max-width: #{$start + 0px}) {
      #{$property}: $fallback;
      #{$property}: $min + 0px;
    }
  }
  @if $clip and $clipAtEnd {
    @media (min-width: #{$end + 0px}) {
      #{$property}: $fallback;
      #{$property}: $max + 0px;
    }
  }
  #{$property}: $fallback;
  #{$property}: $formula;
}

/**
  * Fluid Text
  * Make font-size property fluidly responsive by using calc and viewport units.
  * USAGE: @include fluid-text(20, 40)
  */
@mixin fluid-text($min:20, $max:30, $start: 480, $end: 1200) {
  @include fluid-property(font-size, $min, $max, $start, $end);
}


/**
  * Clearfix
  * Usage: @include clearfix()
  */
@mixin clearfix() {
  &:before,
  &:after {
    content: " "; 
    display: table; 
  }

  &:after {
    display: block;
    clear: both;
    height: 1px;
    margin-top: -1px;
    visibility: hidden;
  }
  & {
    *zoom: 1;
  }
}
